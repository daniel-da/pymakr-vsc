{
  "name": "pymakr-preview",
  "displayName": "Pymakr - Preview",
  "publisher": "Pycom",
  "description": "Tech preview of the upcoming v2",
  "version": "2.7.0",
  "repository": {
    "url": "https://github.com/pycom/pymakr-vsc"
  },
  "preview": true,
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      [
        "semantic-release-vsce",
        {
          "packageVsix": true
        }
      ],
      [
        "@semantic-release/github",
        {
          "assets": [
            {
              "path": "*.vsix",
              "label": "Extension File"
            }
          ]
        }
      ],
      "@semantic-release/git"
    ]
  },
  "icon": "media/pycom.png",
  "vsce": {
    "baseImagesUrl": "https://raw.githubusercontent.com/pycom/pymakr-vsc/next/"
  },
  "contributes": {
    "configuration": [
      {
        "title": "General",
        "properties": {
          "pymakr.ignore": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              ".vscode",
              ".gitignore",
              ".git",
              "env",
              "venv"
            ]
          },
          "pymakr.advancedMode": {
            "type": "boolean",
            "default": false,
            "description": "Prompts on actions instead of using defaults."
          }
        }
      },
      {
        "title": "Debug",
        "properties": {
          "pymakr.debug.logLevel": {
            "type": "string",
            "default": "info",
            "enum": [
              "fatal",
              "error",
              "warn",
              "info",
              "debugShort",
              "debug",
              "traceShort",
              "trace"
            ],
            "enumDescriptions": [
              "Plugin breaking errors",
              "Errors",
              "Warnings",
              "General plugin information",
              "Short debug messages",
              "Long debug messages",
              "Trace without stacktrace",
              "Trace with stacktrace"
            ],
            "description": "Defaults to 'info'. Logs can be read in the developer tools (ctrl + shift i)."
          },
          "pymakr.debug.logFilter": {
            "type": "string",
            "description": "Regular expression. If not empty, only logs matching the filter will be displayed.",
            "examples": [
              ".*terminal.*"
            ]
          }
        }
      },
      {
        "title": "Devices",
        "properties": {
          "pymakr.devices.autoConnect": {
            "type": "string",
            "enum": [
              "always",
              "never",
              "onLostConnection",
              "lastState"
            ],
            "enumDescriptions": [
              "Always auto connect to devices.",
              "Never auto connect to devices.",
              "Only auto connect to devices if connection was previously lost.",
              "Auto connect to devices that were never manually disconnected."
            ],
            "default": "lastState",
            "description": "When to connect devices automatically. Setting can be superseded on device level, by right clicking the device and selecting 'config'."
          },
          "pymakr.devices.include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              ".*"
            ],
            "description": "Filter devices to include in the devices list. Uses regular expression. Will not include devices that match the exclude list."
          },
          "pymakr.devices.exclude": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Filter devices to exclude from the devices list. Uses regular expression. Takes precedence over includes."
          }
        }
      },
      {
        "title": "Notifications",
        "properties": {
          "pymakr.notifications.showSharedTerminalInfo": {
            "type": "boolean",
            "default": true,
            "description": "Show notification when a shared terminal is created."
          }
        }
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "pymakr.conf",
        "url": "./pymakr.schema.json"
      }
    ],
    "languages": [
      {
        "id": "json",
        "filenamePatterns": [
          "pymakr.conf"
        ]
      }
    ],
    "terminal": {
      "profiles": [
        {
          "id": "pymakr.terminal-profile",
          "title": "PyMakr"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "pymakr",
          "title": "PyMakr",
          "icon": "media/pycom.svg"
        }
      ]
    },
    "views": {
      "pymakr": [
        {
          "id": "pymakr-projects-tree",
          "name": "Projects",
          "icon": "media/dep.svg",
          "contextualTitle": "Pymakr"
        },
        {
          "id": "pymakr-devices-tree",
          "name": "Devices",
          "icon": "media/dep.svg",
          "contextualTitle": "Pymakr"
        }
      ]
    },
    "commands": [
      {
        "command": "pymakr.resetDevice",
        "title": "Hard reset device"
      },
      {
        "command": "pymakr.softResetDevice",
        "title": "Soft reset device"
      },
      {
        "command": "pymakr.eraseDevicePrompt",
        "title": "Erase device"
      },
      {
        "command": "pymakr.getPymakr",
        "title": "get Pymakr instance (for extension development)"
      },
      {
        "command": "pymakr.hideDevice",
        "title": "Hide device"
      },
      {
        "command": "pymakr.showTerminalLog",
        "title": "Open terminal log"
      },
      {
        "command": "pymakr.createProjectInFolderPrompt",
        "title": "Create project in folder",
        "icon": "$(plus)"
      },
      {
        "command": "pymakr.createProjectPrompt",
        "title": "Create new project",
        "icon": "$(plus)"
      },
      {
        "command": "pymakr.configureDevice",
        "title": "Configure device"
      },
      {
        "command": "pymakr.connect",
        "title": "Connect device",
        "icon": "$(zap)"
      },
      {
        "command": "pymakr.addDeviceToFileExplorer",
        "title": "Open device in file explorer",
        "icon": "$(folder)"
      },
      {
        "command": "pymakr.newDevice",
        "title": "Add a new device",
        "icon": "$(plus)"
      },
      {
        "command": "pymakr.newDeviceSerial",
        "title": "Serial"
      },
      {
        "command": "pymakr.newDeviceTelnet",
        "title": "Telnet"
      },
      {
        "command": "pymakr.unhideDevice",
        "title": "Unhide a device"
      },
      {
        "command": "pymakr.createTerminalPrompt",
        "title": "Create terminal",
        "icon": "$(terminal-view-icon)"
      },
      {
        "command": "pymakr.disconnect",
        "title": "Disconnect device"
      },
      {
        "command": "pymakr.downloadProject",
        "shortTitle": "Download",
        "title": "Download project from device",
        "icon": "$(cloud-download)"
      },
      {
        "command": "pymakr.uploadProject",
        "shortTitle": "Upload",
        "title": "Upload project to device",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "pymakr.selectDevicesForProjectPrompt",
        "shortTitle": "$(plus)device",
        "title": "Select devices"
      },
      {
        "command": "pymakr.removeDeviceFromProject",
        "title": "Remove device from project",
        "shortTitle": "Remove device"
      },
      {
        "command": "pymakr.uploadPrompt",
        "title": "Upload to device"
      },
      {
        "command": "pymakr.download",
        "title": "Pymakr > Download project"
      },
      {
        "command": "pymakr.runEditor",
        "title": "Run on device",
        "shortTitle": "Run"
      },
      {
        "command": "pymakr.runFile",
        "title": "Run file on device",
        "shortTitle": "Run"
      },
      {
        "command": "pymakr.toggleAdvancedMode",
        "title": "Toggle advanced mode"
      },
      {
        "command": "pymakr.projectSettings",
        "title": "Pymakr > Project settings"
      },
      {
        "command": "pymakr.globalSettings",
        "title": "Pymakr > Global settings"
      },
      {
        "command": "pymakr.extra.getVersion",
        "title": "Pymakr > Extra's > Get firmware version"
      },
      {
        "command": "pymakr.extra.getWifiMac",
        "title": "Pymakr > Extra's > Get WiFi AP SSID"
      },
      {
        "command": "pymakr.extra.getSerial",
        "title": "Pymakr > Extra's > List serial ports"
      },
      {
        "command": "pymakr.help",
        "title": "Pymakr > Help"
      },
      {
        "command": "pymakr.listCommands",
        "title": "Pymakr > List all Commands"
      }
    ],
    "keybindings": [
      {
        "command": "",
        "key": "ctrl+e",
        "when": "terminalFocus"
      },
      {
        "command": "pymakr.uploadPrompt",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s"
      },
      {
        "command": "pymakr.uploadFile",
        "key": "ctrl+shift+s",
        "mac": "ctrl+shift+s"
      },
      {
        "command": "pymakr.runEditor",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r"
      },
      {
        "command": "pymakr.globalSettings",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      }
    ],
    "submenus": [
      {
        "id": "pymakr.newDeviceMenu",
        "label": "New device"
      },
      {
        "id": "pymakr.projectDeviceMenu",
        "icon": "$(ellipsis)",
        "label": "device"
      },
      {
        "id": "pymakr.editorContextMenu",
        "label": "pymakr"
      },
      {
        "id": "pymakr.explorerContextMenu",
        "label": "pymakr"
      }
    ],
    "menus": {
      "pymakr.newDeviceMenu": [
        {
          "command": "pymakr.newDeviceSerial"
        },
        {
          "command": "pymakr.newDeviceTelnet"
        }
      ],
      "pymakr.projectDeviceMenu": [
        {
          "command": "pymakr.resetDevice",
          "when": "viewItem == connectedProjectDevice || viewItem == connectedDevice",
          "group": "1-primary"
        },
        {
          "command": "pymakr.softResetDevice",
          "when": "viewItem == connectedProjectDevice || viewItem == connectedDevice",
          "group": "1-primary"
        },
        {
          "command": "pymakr.disconnect",
          "when": "viewItem == connectedProjectDevice || viewItem == connectedDevice",
          "group": "1-primary"
        },
        {
          "command": "pymakr.removeDeviceFromProject",
          "when": "viewItem == connectedProjectDevice || viewItem == projectDevice",
          "group": "2-config"
        },
        {
          "command": "pymakr.eraseDevicePrompt",
          "when": "viewItem == connectedProjectDevice || viewItem == connectedDevice",
          "group": "2-config"
        },
        {
          "command": "pymakr.configureDevice",
          "group": "2-config"
        },
        {
          "command": "pymakr.hideDevice",
          "group": "2-config"
        },
        {
          "command": "pymakr.showTerminalLog",
          "group": "5-debug"
        }
      ],
      "pymakr.editorContextMenu": [
        {
          "command": "pymakr.runEditor",
          "group": "pymakr"
        },
        {
          "command": "pymakr.uploadPrompt",
          "group": "pymakr"
        }
      ],
      "pymakr.explorerContextMenu": [
        {
          "command": "pymakr.createProjectInFolderPrompt",
          "group": "pymakr",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "pymakr.runFile",
          "group": "pymakr",
          "when": "!explorerResourceIsFolder"
        },
        {
          "command": "pymakr.uploadPrompt",
          "group": "pymakr"
        }
      ],
      "view/item/context": [
        {
          "command": "pymakr.addDeviceToFileExplorer",
          "group": "inline@10",
          "when": "viewItem == connectedDevice || viewItem == connectedProjectDevice"
        },
        {
          "command": "pymakr.selectDevicesForProjectPrompt",
          "group": "inline",
          "when": "viewItem == project"
        },
        {
          "command": "pymakr.downloadProject",
          "when": "viewItem == connectedProjectDevice",
          "group": "inline@8"
        },
        {
          "command": "pymakr.uploadProject",
          "when": "viewItem == connectedProjectDevice",
          "group": "inline@6"
        },
        {
          "command": "pymakr.createTerminalPrompt",
          "when": "viewItem == connectedDevice || viewItem == connectedProjectDevice",
          "group": "inline"
        },
        {
          "command": "pymakr.connect",
          "when": "viewItem == device || viewItem == projectDevice",
          "group": "inline"
        },
        {
          "submenu": "pymakr.projectDeviceMenu",
          "when": "viewItem != project",
          "group": "inline@100"
        }
      ],
      "view/title": [
        {
          "submenu": "pymakr.newDeviceMenu",
          "when": "view == pymakr-devices-tree"
        },
        {
          "command": "pymakr.unhideDevice",
          "when": "view == pymakr-devices-tree"
        },
        {
          "command": "pymakr.createProjectPrompt",
          "group": "navigation",
          "when": "view == pymakr-projects-tree"
        }
      ],
      "explorer/context": [
        {
          "submenu": "pymakr.explorerContextMenu"
        }
      ],
      "editor/context": [
        {
          "submenu": "pymakr.editorContextMenu"
        }
      ],
      "editor/title": [
        {
          "submenu": "pymakr.editorContextMenu"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "mctl": "mctl",
    "pretest.bak": "npm run lint",
    "test": "node ./test/runTest.js",
    "test:unit": "probs src",
    "test-watch:unit": "npx nodemon --exec npm run test:unit",
    "package": "vsce package --baseImagesUrl https://raw.githubusercontent.com/pycom/pymakr-vsc/rewrite/"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/git": "^10.0.1",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.63.1",
    "@vscode/test-electron": "^2.0.3",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "probs": "^1.1.0-3",
    "semantic-release": "^19.0.2",
    "semantic-release-vsce": "^5.0.8",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "@serialport/bindings": "^10.0.1",
    "cheap-watch": "^1.0.4",
    "consolite": "^0.3.3",
    "micropython-ctl-cont": "^1.13.8",
    "picomatch": "^2.3.1",
    "prompts": "^2.4.2",
    "serialport": "^10.2.2"
  }
}
